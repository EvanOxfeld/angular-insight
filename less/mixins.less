@import "variables";

@defaultRadius: 2px;

.RoundedShape(@radius:@defaultRadius) {
	border-radius: @radius;
}

.RoundedShape(@topLeft; @topRight; @bottomRight; @bottomLeft) {
	.RoundedShape(@arguments);
}

.RoundedTopShape(@radius:@defaultRadius) {
	.RoundedShape(@radius; @radius; 0; 0);
}

.RoundedBottomShape(@radius:@defaultRadius) {
	.RoundedShape(0; 0; @radius; @radius);
}

.RoundedRightShape(@radius:@defaultRadius) {
	.RoundedShape(0; @radius; @radius; 0);
}

.RoundedLeftShape(@radius:@defaultRadius) {
	.RoundedShape(@radius; 0; 0; @radius);
}

.Round {
	.RoundedShape(9999px)
}

.RoundedButton {
	.RoundedShape()
}

.BorderTopLeftRadius(@radius:@defaultRadius) {
	border-top-left-radius: @radius;
}

.BorderTopRightRadius(@radius:@defaultRadius) {
	border-top-right-radius: @radius;
}

.BorderBottomLeftRadius(@radius:@defaultRadius) {
	border-bottom-left-radius: @radius;
}

.BorderBottomRightRadius(@radius:@defaultRadius) {
	border-bottom-right-radius: @radius;
}

@defaultShadow: 0 0 2px @black;
.BoxShadow(@values:@defaultShadow) {
	-webkit-box-shadow: @values; //left in for older iOS Safari (<5.1) and Android (<4)
	box-shadow: @values;
}

.PointerCursor {
	cursor: pointer;
}

.TextClip {
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;

	.HyphensAuto;
}

.HyphensAuto { //not standard, so these are all needed
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	-ms-hyphens: auto;
	hyphens: auto;
}

.WordBreak { //Be VERY careful with this, breaks normal words wh_erever
	word-break: break-all;
	word-break: break-word;  //webkit
	-ms-word-break: break-all;
	overflow-wrap: break-word;
}

@defaultTransitionAll: all linear 0.25s;
.TransitionAll(@values:@defaultTransitionAll) {
	-webkit-transition: @values; //not needed by desktop, but doesn't go back too far on mobile
	transition: @values;
}

.Transform(@values) {
	-ms-transform: @values; //IE 9
	-webkit-transform: @values; //still used by mobile + Safari desktop
	transform: @values;
}

.TransformOrigin(@values) {
	-webkit-transform-origin: @values; //still used by mobile + Safari desktop
	transform-origin: @values;
	-ms-transform-origin: @values; //IE 9
}

.GlyphiconFont {
	font-family: 'Glyphicons Regular';
}

.ButtonGlyphicons {
	font-size: @glyphiconSizeBase;
	top: 3px;
}

@defaultBlur: 1px;
@defaultBlurOpacity: 0.9;
.Blur(
	@blur: @defaultBlur;
	@opacity: @defaultBlurOpacity;
) {
	-webkit-filter: blur(@blur);
	-ms-filter: blur(@blur); //may not work
	filter: blur(@blur);
	opacity: @opacity;
}

.flexDisplay {
	display: -webkit-flex;
	display: -ms-flex; //IE10+
	display: flex;
}

.flexContainerStatic {
	display: -webkit-box;
	display: -ms-flexbox; //IE10+
	-ms-box-orient: horizontal;
	display: -webkit-flex;
	display: -ms-flex;
	display: flex;
}

@defaultFlexWrap: nowrap;
@defaultFlexAlignItems: stretch;
@defaultFlexjustify: space-between;

.flexContainer (
	@wrap:@defaultFlexWrap;
	@stretch:@defaultFlexAlignItems;
	@justify:@defaultFlexjustify;
) {
	&:extend(.flexContainerStatic);

	-webkit-flex-flow: row @wrap;
	-ms-flex-flow: row @wrap;
	flex-flow: row @wrap;

	align-items: @stretch;
	justify-content: @justify;
}

@defaultFlexItem: 0 0 auto;
.flexItem(@flex:@defaultFlexItem) {

	&:extend(.flexDisplay);

	-ms-flex: @flex;
	-webkit-flex: @flex;
	-ms-flex: @flex;
	flex: @flex;
}

.flexJustifyContent(@value){
	-ms-justify-content: @value;
	-webkit-justify-content: @value;
	justify-content: @value;
}

.VerticalGradient (@startColor: @white, @endColor: @black) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(top, @startColor, @endColor);
	background: -moz-linear-gradient(top, @startColor, @endColor);
	background: -ms-linear-gradient(top, @startColor, @endColor);
	background: linear-gradient(top, @startColor, @endColor);
}

.HorizontalGradient (@startColor: @white, @endColor: @black) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(left, @startColor, @endColor);
	background: -moz-linear-gradient(left, @startColor, @endColor);
	background: -ms-linear-gradient(left, @startColor, @endColor);
	background: linear-gradient(to right, @startColor, @endColor);
}

.TextShadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: @string;
}

@defaultTriangleSize: 8px;
@defaultTriangleColor: @white;

.TriangleTop(@size:@defaultTriangleSize, @color:@defaultTriangleColor){
	border-style: solid;
	border-width: 0 @size @size @size;
	border-color: transparent transparent @color transparent;
}

.TriangleBottom(@size:@defaultTriangleSize, @color:@defaultTriangleColor) {
	border-style: solid;
	border-width: @size @size 0 @size;
	border-color: @color transparent transparent  transparent;
}

.TriangleRight(@size:@defaultTriangleSize, @color:@defaultTriangleColor) {
	border-style: solid;
	border-width: @size 0 @size @size;
	border-color: transparent transparent transparent @color;
}

.TriangleLeft(@size:@defaultTriangleSize, @color:@defaultTriangleColor) {
	border-style: solid;
	border-width: @size @size @size 0;
	border-color: transparent @color transparent transparent;
}

.AbsoluteFill {
	position: absolute;
	top: 0;
	right:0;
	bottom:0;
	left: 0;
}

.BtnWhite {
	background: rgba(255,255,255,0.65);
	background: -moz-linear-gradient(top, @white 0%, rgba(247, 247, 247, 1) 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @white), color-stop(100%, rgba(247, 247, 247, 1)));
	background: -webkit-linear-gradient(top, @white 0%, rgba(247, 247, 247, 1) 100%);
	background: -ms-linear-gradient(top, @white 0%, rgba(247, 247, 247, 1) 100%);
	background: linear-gradient(to bottom, @white 0%, rgba(247, 247, 247, 1) 100%);

	border-color: rgba(0,0,0,0.15);

	.BoxShadow(inset 0 1px 0 @white);
	color: @color1;
}

@defaultBoxSizing: content-box;
.BoxSizing(@boxSizing:@defaultBoxSizing) {
	-webkit-box-sizing: @boxSizing;
	box-sizing: @boxSizing;
}

.Animation(@animation) {
	-webkit-animation: @animation;
	animation: @animation;
}

.AnimationDirection(@animationDirection) {
	animation-direction: @animationDirection;
	-webkit-animation-direction: @animationDirection;
}

@defaultUserSelect: none;
.UserSelect(@userSelect:@defaultUserSelect) {
	-webkit-user-select: @userSelect;
	-moz-user-select: @userSelect;
	-ms-user-select: @userSelect; //IE10+
	user-select: none;
}

.BackgroundClip(@backgroundClip) {
	-webkit-background-clip: @backgroundClip;
	background-clip: @backgroundClip;
} 