@import "variables";
@import "mixins";

.animate-show.ng-hide {
	//ng-show
	&-add,
	&-remove {
		.TransitionAll(all linear 0.5s);
		display: block !important;
	}

	&-add.ng-hide-add-active,
	&-remove {
		opacity: 0;
	}

	&-add,
	&-remove.ng-hide-remove-active {
		opacity: 1;
	}

	.video-container.full-video-container & {
		&-add,
		&-remove {
			z-index: 20000;
			position: absolute;
		}
	}

	.full-video-background & {
		&-add.ng-hide-add-active {
			opacity: 0;
		}

		&-remove {
			opacity: 0.5;
		}

		&-add,
		&-remove.ng-hide-remove-active {
			opacity: 1;
		}
	}
}

.vbrick-player,
.vb-player,
.player-wrap .overlay-play,
.player-wrap .overlay-play .circle,
.player-controls {
	//helps with safari flickering
	-webkit-backface-visibility: hidden;
	-webkit-perspective: 1000;
	-webkit-transform-style: preserve-3d;
	-webkit-transform: translateZ(0);
}

.player-wrap .overlay-play {
	//helps with safari flickering
	-webkit-transform: translateZ(0);

	.circle {
		.TransitionAll(all linear 0.125s);
	}
}

.player-controls {
	.TransitionAll(linear 0.35s);
	opacity: 1;

	&.ng-hide {
		.TransitionAll(linear 0.5s 1s);

		&-add.ng-hide-add-active,
		&-remove {
			.Transform(translate3d(0,30px,0));
		}

		&-add,
		&-remove.ng-hide-remove-active {
			.Transform(translate3d(0,0,0));
		}
	}
}

//ng-if
.animate-if {
	&.ng-enter, 
	&.ng-leave {
		.TransitionAll(all cubic-bezier(0.250, 0.460, 0.450, 0.940) 1s);
	}

	&.ng-enter,
	&.ng-leave.ng-leave-active {
		opacity: 0;
	}

	&.ng-leave,
	&.ng-enter.ng-enter-active {
		opacity: 1;
	}

	&.async-notifications {
		&.ng-enter,
		&.ng-leave.ng-leave-active{
			right: -200%;
		}

		&.ng-leave,
		&.ng-enter.ng-enter-active{
			right: 0;
		}
	}
}

// ng-repeat
.animate-repeat {
	&.ng-move,
	&.ng-enter,
	&.ng-leave {
		.TransitionAll(all linear 0.5s);
	}

	&.ng-leave.ng-leave-active,
	&.ng-move,
	&.ng-enter {
		opacity: 0;
	}

	&.ng-leave,
	&.ng-move.ng-move-active,
	&.ng-enter.ng-enter-active {
		opacity: 1;
	}
}

//other cases 
.flip {
	.Transform(scale(1,-1));
}

.rotate-360 {
	.Animation(icon-spinning 2s infinite linear);
}

.icon-spinning {
	.Animation(icon-spinning 2s infinite linear);
	.Transform(50% 58%);
	.TransformOrigin(50% 58%);
}

//don't plug in the transform prefix mixin to keyframes
@-webkit-keyframes spin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

.animate-pulsate {
	-webkit-animation-name: pulsate;
	-webkit-animation-duration: 4s;
	-webkit-animation-timing-function: ease-in-out;
	-webkit-animation-iteration-count: infinite;
}

@-webkit-keyframes pulsate {
	0% {opacity: 0.65;}
	50% {opacity: 1.0;}
	100% {opacity: 0.65;}
}


//this fixes jitter on animated table elements, but using it globally sometimes makes weird things happen
.ng-animate-start,
.ng-animate-active {
	border-spacing:0;
	-ms-zoom: auto;
}